---
name: "(chunk) Build C++ project (macos)"

on:
  workflow_call:
    inputs:
      macos_runner:
        type: string
        required: false
        default: macos-12
      conan_version:
        type: string
        required: false
        default: 1.47.0
      library_name:
        type: string
        required: true
        description: "Name of the library. It should match name of the repository"
      library_version:
        type: string
        required: true
        description: "Version of the library."
      remote_project:
        type: string
        required: false
        default: ""
      profile:
        type: string
        required: true
        description: "Profile to use in this run"
      run_tests:
        type: string
        required: false
        default: ctest --output-on-failure
      conanfile:
        type: string
        required: false
        default: conanfile.txt
        description: "Name of the conanfile, typically it will be `conanfile.txt` or `conanfile.py`"
    secrets:
      RT_TOKEN:
        required: true
      RT_USERNAME:
        required: true

jobs:
  build_and_test:
    runs-on: macos-12
    env:
      CONAN_SYSREQUIRES_MODE: enabled
      CONAN_PRINT_RUN_COMMANDS: 1
    steps:

      - name: Install jq
        run: |
          brew install jq

      - name: Check out repository code
        uses: rodrigorodriguescosta/checkout@1d64c0a4a695ff5edb95596c11b430050668c83f  # FIXME: Not using actions/checkout just because of 'https://github.com/actions/checkout/pull/388'

      - name: Cache Conan packages
        uses: actions/cache@v2
        with:
          key: conan-cache-${{ inputs.library_name }}
          path: /Users/runner/.conan/data

      - name: Install Conan
        run: |
          pip3 install conan==${{ inputs.conan_version }}
          conan --version

      - name: Configure Conan
        run: |
          conan config init --force
          conan config set general.revisions_enabled=1
          conan --version
          conan config home

      - name: Connect to remote (project)
        if: ${{ inputs.remote_project }}
        run: |
          conan remote add -i 0 remote-project ${{ inputs.remote_project }}
          conan user -r=remote-project -p=${{ secrets.RT_TOKEN }} ${{ secrets.RT_USERNAME }}

      - name: Prepare deps
        run: |
          cp -r .conan/* $(conan config home)
          conan profile list

      - name: Build the project
        run: |
          mkdir build && cd build
          conan install ../${{ inputs.conanfile }} --profile:host=${{ inputs.profile }} --profile:build=default --build=missing --update
          cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
          cmake --build . --config Release --target flappy-frog

      - name: Upload packages that have being built
        if: ${{ inputs.remote_project }}
        run: |
          conan upload --confirm --parallel --all --remote remote-project *

      # - name: Run tests
      #   if: ${{ inputs.run_tests }}
      #   run: |
      #     cd build
      #     ${{ inputs.run_tests }}
  